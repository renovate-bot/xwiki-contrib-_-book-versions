<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="BookVersions.Code.VersionSheet" locale="">
  <web>BookVersions.Code</web>
  <name>VersionSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>BookVersions.Code.VersionClass</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>#if($doc.documentReference.name == 'VersionSheet')Version Sheet#{else}$services.display.title($doc, {'displayerHint': 'default', 'outputSyntaxId': 'plain/1.0'})#end</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#set ($object = $doc.getObject('BookVersions.Code.VersionClass'))
#if (!$object)
  #stop
#end
## We have to use wiki=true because $doc.display() can produce wiki syntax.
{{html wiki="true" clean="false"}}
## Load the JavaScript code required to make the object properties editable in-place.
#set ($discard = $xwiki.jsfx.use('uicomponents/edit/editableProperty.js', {
  'forceSkinAction': true,
  'language': $xcontext.locale
}))
#set ($editing = $xcontext.action == 'edit')
## The object to display.
#set ($xobject = $doc.getObject('BookVersions.Code.VersionClass'))
## The class that describes the object properties.
#set ($xclass = $xobject.xWikiClass)
## Make sure the following display method calls use the right object.
#set ($discard = $doc.use($xobject))
&lt;h1&gt;$services.localization.render('BookVersions.Code.VersionClassSheet.versionConfiguration')&lt;/h1&gt;
## Using the xform vertical form layout.
&lt;div class="xform"&gt;
  &lt;dl&gt;
    &lt;dt&gt;
      &lt;label&gt;
        $!escapetool.xml($services.localization.render('BookVersions.template.title'))
      &lt;/label&gt;
    &lt;/dt&gt;
    &lt;dd&gt;{{include reference="BookVersions.Code.TitleDisplay"/}}&lt;/dd&gt;
  #foreach ($property in $xclass.properties)
    &lt;dt #if (!$editing &amp;&amp; $hasEdit)
        #if ($property.name != 'description')
        class="editableProperty"
        #end
        #set ($xobjectPropertyReference = $xobject.getPropertyReference($property.name))
        data-property="$escapetool.xml($services.model.serialize($xobjectPropertyReference))"
        data-property-type="object"#end&gt;
      ## This must match the id generated by the $doc.display() method below.
      #set ($propertyId = "${xclass.name}_${xobject.number}_$property.name")
      &lt;label#if ($editing) for="$escapetool.xml($propertyId)"#end&gt;
        $escapetool.xml($property.translatedPrettyName)
      &lt;/label&gt;
      ## Support for specifying a translation key as hint in the property definition.
      &lt;span class="xHint"&gt;$!escapetool.xml($services.localization.render($property.hint))&lt;/span&gt;
    &lt;/dt&gt;
    &lt;dd&gt;$doc.display($property.name)&lt;/dd&gt;
  #end
  #if (!$xclass.properties || $xclass.properties.size() == 0)
    ## Keep the empty definition term in order to have valid HTML.
    &lt;dt&gt;&lt;/dt&gt;
    &lt;dd&gt;$escapetool.xml($services.localization.render('xclass.defaultObjectSheet.noProperties'))&lt;/dd&gt;
  #end
  &lt;/dl&gt;
&lt;/div&gt;
#set ($collectionRef=$services.bookversions.getVersionedCollectionReference($doc.getDocumentReference()))
#set ($discard = $xwiki.jsx.use('BookVersions.Code.VersionSheet'))
#if ($services.bookversions.isBook($collectionRef) &amp;&amp; !$editing)
  ## Display current configured libraries
  &lt;h1&gt;$services.localization.render('BookVersions.Code.VersionClassSheet.librariesConfiguration')&lt;/h1&gt;
  ## The object to display.
  #set ($xobjects = $doc.getObjects('BookVersions.Code.LibraryReferenceClass'))
  #foreach($xobject in $xobjects)
    ## The class that describes the object properties.
    #set ($xclass = $xobject.xWikiClass)
    ## Make sure the following display method calls use the right object.
    #set ($discard = $doc.use($xobject))
    &lt;div class="xform"&gt;
      &lt;dl&gt;
      #foreach ($property in $xclass.properties)
        &lt;dt #if ($hasEdit)
            #if ($property.name != 'description')
            class="editableProperty"
            #end
            #set ($xobjectPropertyReference = $xobject.getPropertyReference($property.name))
            data-property="$escapetool.xml($services.model.serialize($xobjectPropertyReference))"
            data-property-type="object"#end&gt;
          ## This must match the id generated by the $doc.display() method below.
          #set ($propertyId = "${xclass.name}_${xobject.number}_$property.name")
          &lt;label&gt;
            $escapetool.xml($property.translatedPrettyName)
          &lt;/label&gt;
          ## Support for specifying a translation key as hint in the property definition.
          &lt;span class="xHint"&gt;$!escapetool.xml($services.localization.render($property.hint))&lt;/span&gt;
        &lt;/dt&gt;
        &lt;dd&gt;$doc.display($property.name)&lt;/dd&gt;
      #end
      #if (!$xclass.properties || $xclass.properties.size() == 0)
        ## Keep the empty definition term in order to have valid HTML.
        &lt;dt&gt;&lt;/dt&gt;
        &lt;dd&gt;$escapetool.xml($services.localization.render('xclass.defaultObjectSheet.noProperties'))&lt;/dd&gt;
      #end
      &lt;/dl&gt;
      &lt;a title="Delete entry" href="#" class="action action_delete delete-configuration-btn" data-object-number="$xobject.getNumber()" data-doc-reference="$escapetool.xml($services.model.serialize($doc.documentReference, 'local'))"&gt;
        &lt;span class="action-icon fa fa-times text-danger"&gt;&lt;/span&gt;
        &lt;span class="action-name"&gt;$escapetool.xml($services.localization.render('BookVersions.Code.VersionClassSheet.deleteLibrairieConfiguration'))&lt;/span&gt;
      &lt;/a&gt;
    &lt;/div&gt;
    ----
  #end
  #if ($hasEdit)
  &lt;button type="button" class="btn btn-primary" id="addNewConfigurationBtn" href="#"
          data-doc-reference="$escapetool.xml($services.model.serialize($doc.documentReference, 'local'))"&gt;Add new configuration&lt;/button&gt;
  #end
  {{/html}}
#end
{{/velocity}}</content>
  <object>
    <name>BookVersions.Code.VersionSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>b184b6b2-b015-4fd4-b8ed-5321cec11494</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>document.querySelectorAll('.delete-configuration-btn').forEach((el, i) =&gt; {
  el.addEventListener('click', (event) =&gt; {
    fetch("$xwiki.getURL('BookVersions.Code.VersionSheetService')?action=remove&amp;reference=" + encodeURIComponent(el.dataset.docReference) + "&amp;number=" + el.dataset.objectNumber, {
      method: 'get'
    })
      .then(response =&gt; response.json())
      .then(data =&gt; {
        if (data.success) {
          window.location.reload()
          event.preventDefault()
        } else {
          console.error(data.message)
          throw new Error("Can't delete object")
        }
      })
      .catch(err =&gt; {
        console.log(err);
      });
  })
})

document.querySelector('#addNewConfigurationBtn')
  .addEventListener('click', (event) =&gt; {
    fetch("$xwiki.getURL('BookVersions.Code.VersionSheetService')?action=addNewObject&amp;reference=" + encodeURIComponent(event.target.dataset.docReference), {
      method: 'get'
    })
      .then(response =&gt; response.json())
      .then(data =&gt; {
        if (data.success) {
          window.location.reload()
          event.preventDefault()
        } else {
          console.error(data.message)
          throw new Error("Can't create object")
        }
      })
      .catch(err =&gt; {
        console.log(err);
      });
  })</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
