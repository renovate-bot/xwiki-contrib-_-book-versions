<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="BookVersions.Code.PublicationConfigurationSheet" locale="">
  <web>BookVersions.Code</web>
  <name>PublicationConfigurationSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>BookVersions.Code.PublicationConfigurationClass</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>#if($doc.documentReference.name == 'PublicationConfigurationSheet')Publication Configuration Sheet#{else}$services.display.title($doc, {'displayerHint': 'default', 'outputSyntaxId': 'plain/1.0'})#end</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#set ($collectionReference = $services.bookversions.getVersionedCollectionReference($doc.getDocumentReference()))
#set ($isLibrary = $services.bookversions.isLibrary($collectionReference))
#set ($configReference = $!request.configReference)
#set ($configObj = $xwiki.getDocument($configReference).getObject('BookVersions.Code.PublicationConfigurationClass'))
#set ($publishedVersion = $configObj.getProperty('version').value)
#set ($publishedVersionNameStr = $xwiki.getDocument($publishedVersion).name)

## Stop if on PublicationConfigurationSheet
#if($doc.documentReference.name == 'PublicationConfigurationSheet')
  #stop
#end
## Handle publication request first, before any output
#if ("$!request.action" == 'publish' &amp;&amp; $services.csrf.isTokenValid($!request.form_token))
  #if ($configReference)
    #set ($jobId = $services.bookversions.publish($services.model.resolveDocument($configReference)))
    #if ($jobId)
      ## Redirect to self with jobId parameter
      #set ($redirectParams = $escapetool.url({'jobId': $jobId}))
      $response.sendRedirect($doc.getURL('view', $redirectParams))
      ## Stop processing here
      #stop
    #end
  #end
#elseif ("$!request.action" == 'preview' &amp;&amp; $services.csrf.isTokenValid($!request.form_token))
== $services.localization.render('BookVersions.Code.PublicationConfigurationSheet.previewTitle') ==
#set($previewData = $services.bookversions.previewPublication($doc.documentReference, $xcontext.getUserReference()))

{{box}}
## Define a macro to properly handle references
#macro(renderReference $ref)
  #if("$!ref" != "")
    #if($ref.class.name == "org.xwiki.model.reference.SpaceReference")
      #set($spaceMainDoc = $services.model.createDocumentReference("WebHome", $ref))
      [[${ref}&gt;&gt;$spaceMainDoc]]##
    #else
      [[${ref}]]##
    #end
  #else
    (none)
  #end
#end

## Process preview data if available
#if("$!{previewData}" != '')
  ## Check if the publication will be canceled
  #set($canceled = false)
  #foreach($line in $previewData)
    #if("$!{line.message}" == "Publication will be canceled because target is not empty")
      #set($canceled = true)
      {{warning}}
$services.localization.render(
  'BookVersions.Code.PublicationConfigurationSheet.publicationCanceledBecauseTargetIsNotEmpty', 
  [ $escapetool.xml($line.variable.targetSpace) ]
)
$services.localization.render('BookVersions.Code.PublicationConfigurationSheet.existingDocuments')
#foreach($doc in $line.variable.existingDocs)
* $services.localization.render('BookVersions.Code.PublicationConfigurationSheet.existingDocumentLine', [ $escapetool.xml($doc) ])
#end
      {{/warning}}
      #break
    #end
  #end
  #if(!$canceled)
    ## Display initial information
    #foreach($line in $previewData)
      #if("$!{line.message}" == "Target space will be emptied before publication")
$services.localization.render(
  'BookVersions.Code.PublicationConfigurationSheet.publicationWillRepublish',
  [ "#renderReference($line.variable)" ]
)

$services.localization.render('BookVersions.Code.PublicationConfigurationSheet.theFollowingDocumentsWillBeRemoved')
      #end
      #if("$!{line.message}" == "Document would be removed")
* $services.localization.render(
    'BookVersions.Code.PublicationConfigurationSheet.docWouldBeRemoved',
    [ "#renderReference($line.variable)" ]
)
      #end
      #if("$!{line.message}" == "Publishing from collection and version")

$services.localization.render(
  'BookVersions.Code.PublicationConfigurationSheet.publishingFrom',
  [ $escapetool.xml($line.variable) ]
)
      #end
      #if("$!{line.message}" == "Using variant")
$services.localization.render(
  'BookVersions.Code.PublicationConfigurationSheet.usingVariant',
  [ $escapetool.xml($line.variable) ]
)
      #end
      #if("$!{line.message}" == "Library is published and will be used")
$services.localization.render(
  'BookVersions.Code.PublicationConfigurationSheet.usingLibrary',
  [
    "#renderReference($line.variable.libraryRef)",
    "#renderReference($line.variable.versionRef)"
  ]
)
$services.localization.render(
  'BookVersions.Code.PublicationConfigurationSheet.publishedAt',
  [ "#renderReference($line.variable.publishedRef)" ]
)
      #end
      #if("$!{line.message}" == "WARNING: Library is not published")
{{warning}}
$services.localization.render(
  'BookVersions.Code.PublicationConfigurationSheet.libraryIsNotPublished',
  [
    "#renderReference($line.variable.libraryRef)",
    "#renderReference($line.variable.versionRef)"
  ]
)
{{/warning}}
      #end
      #if("$!{line.message}" == "Pages to process")
----
$services.localization.render('BookVersions.Code.PublicationConfigurationSheet.pagesToProcess')
      #end
    #end
    ## Display pages in a simple indented format
    ## Find main book page first
    #set($mainBookPage = "")
    #foreach($line in $previewData)
      #if("$!{line.message}" == "Page will be published" &amp;&amp; "$!{line.variable.source}" != "")
        #set($source = "$!{line.variable.source}")
        #if($source.endsWith("WebHome") || $source.endsWith("Book"))
          #set($mainBookPage = $source)
          #break
        #end
      #end
    #end
    ## If we have a main book page, display it first
    #if($mainBookPage != "")
      #foreach($line in $previewData)
        #if("$!{line.message}" == "Page will be published" &amp;&amp; "$!{line.variable.source}" == "$mainBookPage")
$services.localization.render(
  'BookVersions.Code.PublicationConfigurationSheet.pageWillBePublished',
  [
    "#renderReference($line.variable.source)",
    "#renderReference($line.variable.destination)"
  ]
)
#if("$!{line.variable.content}" != "$!{line.variable.source}")
   $services.localization.render(
     'BookVersions.Code.PublicationConfigurationSheet.contentFrom',
     [ "#renderReference($line.variable.content)" ]
   )
#end
        #end
      #end
      ## Display child pages
      #foreach($line in $previewData)
        #if("$!{line.message}" == "Page will be published" &amp;&amp; "$!{line.variable.source}" != "$mainBookPage")
  * $services.localization.render(
      'BookVersions.Code.PublicationConfigurationSheet.pageWillBePublished',
      [
        "#renderReference($line.variable.source)",
        "#renderReference($line.variable.destination)"
      ]
    )
#if("$!{line.variable.content}" != "$!{line.variable.source}")
     $services.localization.render(
       'BookVersions.Code.PublicationConfigurationSheet.contentFrom',
       [ "#renderReference($line.variable.content)" ]
     )
#end
        #end
      #end
    #else
      ## Just display all pages without hierarchy
      #foreach($line in $previewData)
        #if("$!{line.message}" == "Page will be published")
$services.localization.render(
  'BookVersions.Code.PublicationConfigurationSheet.pageWillBePublished',
  [
    "#renderReference($line.variable.source)",
    "#renderReference($line.variable.destination)"
  ]
)
#if("$!{line.variable.content}" != "$!{line.variable.source}")
   $services.localization.render(
     'BookVersions.Code.PublicationConfigurationSheet.contentFrom',
     [ "#renderReference($line.variable.content)" ]
   )
#end
        #end
      #end
    #end
    ## Display skipped and deleted pages
    #foreach($line in $previewData)
      #if("$!{line.message}" == "Page is marked as deleted")
$services.localization.render(
  'BookVersions.Code.PublicationConfigurationSheet.pageIsMarkedDeleted',
  [ "#renderReference($line.variable.pageRef)" ]
)
      #end
      #if("$!{line.message.startsWith('Page has')}" == "true")
$services.localization.render(
  'BookVersions.Code.PublicationConfigurationSheet.pageHasSomething',
  [
    "#renderReference($line.variable.pageRef)",
    $escapetool.xml($line.message)
  ]
)
      #end
      #if("$!{line.message}" == "Page is not associated with the published variant")
        ‚ùå **#renderReference($line.variable.pageRef)**: $services.localization.render("BookVersions.Code.PublicationConfigurationSheet.pageNotInPublishedVariant")
      #end
      #if("$!{line.message}" == "Page is marked as deleted and will be removed from target if exists")
$services.localization.render(
  'BookVersions.Code.PublicationConfigurationSheet.pageIsMarkedDeletedRemoveFromTarget',
  [
    "#renderReference($line.variable.sourceMarkedDeleted)",
    "#renderReference($line.variable.targetToDelete)"
  ]
)
      #end
      #if("$!{line.message}" == "Will be deleted from target")
$services.localization.render(
  'BookVersions.Code.PublicationConfigurationSheet.pageWillBeDeletedFromTarget',
  [
    "#renderReference($line.variable.targetToDelete)",
    "#renderReference($line.variable.sourceMarkedDeleted)"
  ]
)
      #end
    #end
    ## Display deletion summary and page order info
    #foreach($line in $previewData)
      #if("$!{line.message}" == "Pages marked as deleted that will be removed from target")
----
$services.localization.render(
  'BookVersions.Code.PublicationConfigurationSheet.documentsToBeRemovedFromTarget',
  [ $escapetool.xml($line.variable.count) ]
)
#foreach($ref in $line.variable.references)
* #renderReference($ref)
#end
      #end
      #if("$!{line.message}" == "Page order will be preserved")
----
$services.localization.render('BookVersions.Code.PublicationConfigurationSheet.pageOrderWillBePreserved')
      #end
    #end

    ## Simple legend
    ----
$services.localization.render('BookVersions.Code.PublicationConfigurationSheet.legend')

$services.localization.render('BookVersions.Code.PublicationConfigurationSheet.legendWillBePublished')
$services.localization.render('BookVersions.Code.PublicationConfigurationSheet.legendWillBeSkipped')
$services.localization.render('BookVersions.Code.PublicationConfigurationSheet.legendWillBeDeleted')

  #end
#else
  $services.localization.render('BookVersions.Code.PublicationConfigurationSheet.noPreviewDataAvailable')
#end
{{/box}}


  {{html wiki="true" clean="false"}}
  &lt;form action="$doc.getURL()" method="post" class="publication-form"&gt;
    &lt;input type="hidden" name="action" value="publish" /&gt;
    &lt;input type="hidden" name="form_token" value="$!services.csrf.getToken()" /&gt;
    &lt;input type="hidden" name="configReference" value="$services.model.serialize($doc.documentReference, 'local')" /&gt;
      #set ($sourceValue = $xobject.getProperty('source').value)
      &lt;a href="$xwiki.getURL($doc)" class="btn btn-default"&gt;
        $services.localization.render('BookVersions.Code.PublicationProgress.back')
      &lt;/a&gt;
    &lt;div class="btn-group" id="tmCreateResource"&gt;
      &lt;button type="submit" class="btn btn-primary" title="$services.localization.render('BookVersions.Code.PublicationConfigurationSheet.nextButton')"&gt;
        &lt;span class="fa fa-print" aria-hidden="true"&gt;&lt;/span&gt;
        &lt;span class="btn-label"&gt;$services.localization.render('BookVersions.Code.PublicationConfigurationSheet.previewContinueButton')&lt;/span&gt;
      &lt;/button&gt;
    &lt;/div&gt;
  &lt;/form&gt;
  {{/html}}
  #stop
#end


## We have to use wiki=true because $doc.display() can produce wiki syntax.
{{html wiki="true" clean="false"}}
## Load the JavaScript code required to make the object properties editable in-place.
#set ($discard = $xwiki.jsfx.use('uicomponents/edit/editableProperty.js', {
  'forceSkinAction': true,
  'language': $xcontext.locale
}))
#set ($editing = $xcontext.action == 'edit')
## The object to display.
#set ($xobject = $doc.getObject('BookVersions.Code.PublicationConfigurationClass'))
## The class that describes the object properties.
#set ($xclass = $xobject.xWikiClass)
#set ($discard = $doc.use($xobject))
## Adapt display if is a library
#set ($collectionReference = $services.bookversions.getVersionedCollectionReference($doc.getDocumentReference()))
#set ($isLibrary = $services.bookversions.isLibrary($collectionReference))
#set ($propertyHidden = ['variant','language'])

## Check if we have a job ID parameter and should display progress
#if ("$!{request.jobId}" != '')
  &lt;div class="publication-progress"&gt;
    &lt;h2&gt;$services.localization.render('BookVersions.Code.PublicationProgress.title')&lt;/h2&gt;

    {{jobprogress jobid="$!request.jobId"/}}

    ## Add navigation links
    &lt;div class="publication-navigation"&gt;
      #set ($sourceValue = $xobject.getProperty('source').value)
      &lt;a href="$xwiki.getURL($doc)" class="btn btn-default"&gt;
        $services.localization.render('BookVersions.Code.PublicationProgress.back')
      &lt;/a&gt;
      &lt;a href="$xwiki.getURL($services.model.createDocumentReference('WebHome',$services.model.resolveSpace($xobject.getValue('destinationSpace'))))" class="btn btn-primary"&gt;
        &lt;span class="fa fa-print"&gt;&lt;/span&gt;
          $services.localization.render('BookVersions.Code.PublicationProgress.goToPublished')
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
#else
  &lt;div class="xform"&gt;
    &lt;dl&gt;
    #foreach ($property in $xclass.properties)
       #if (!($isLibrary &amp;&amp; $propertyHidden.contains($property.name)))
        &lt;dt #if (!$editing &amp;&amp; $hasEdit)
              #if ($property.name != 'destinationSpace' &amp;&amp; $property.name != 'source')
              class="editableProperty"
              #end
              #set ($xobjectPropertyReference = $xobject.getPropertyReference($property.name))
              data-property="$escapetool.xml($services.model.serialize($xobjectPropertyReference))"
              data-property-type="object"
            #end&gt;
          #set ($propertyId = "${xclass.name}_${xobject.number}_$property.name")
          &lt;label#if ($editing) for="$escapetool.xml($propertyId)"#end&gt;
            $escapetool.xml($property.translatedPrettyName)
          &lt;/label&gt;
          &lt;span class="xHint"&gt;$!escapetool.xml($services.localization.render($property.hint))&lt;/span&gt;
        &lt;/dt&gt;
        &lt;dd&gt;
            $doc.display($property.name)
        &lt;/dd&gt;
      #end
    #end
    #if (!$xclass.properties || $xclass.properties.size() == 0)
      &lt;dt&gt;&lt;/dt&gt;
      &lt;dd&gt;$escapetool.xml($services.localization.render('xclass.defaultObjectSheet.noProperties'))&lt;/dd&gt;
    #end
    &lt;/dl&gt;
  &lt;/div&gt;
  #if (!$editing)
  &lt;form action="$doc.getURL()" method="post" class="publication-form"&gt;
    &lt;input type="hidden" name="action" value="preview" /&gt;
    &lt;input type="hidden" name="form_token" value="$!services.csrf.getToken()" /&gt;
    &lt;input type="hidden" name="configReference" value="$services.model.serialize($doc.documentReference, 'local')" /&gt;
    &lt;div class="btn-group" id="tmCreateResource"&gt;
      &lt;button type="submit" class="btn btn-primary" title="$services.localization.render('BookVersions.Code.PublicationConfigurationSheet.nextButton')"&gt;
        &lt;span class="fa fa-print" aria-hidden="true"&gt;&lt;/span&gt;
        &lt;span class="btn-label"&gt;$services.localization.render('BookVersions.Code.PublicationConfigurationSheet.nextButton')&lt;/span&gt;
      &lt;/button&gt;
    &lt;/div&gt;
  &lt;/form&gt;
  #end
#end
{{/html}}
{{/velocity}}</content>
</xwikidoc>
