<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="BookVersions.Code.AddBookLibrary" locale="">
  <web>BookVersions.Code</web>
  <name>AddBookLibrary</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>Book Library Add Form</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content/>
  <object>
    <name>BookVersions.Code.AddBookLibrary</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>1ae1371f-d70a-42ef-9cf2-6bd4fe5d968c</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var XWiki = (function (XWiki) {
  XWiki.EntryNamePopup = Class.create(XWiki.widgets.ModalPopup, {
    initialize : function($super, trigger) {
      trigger.observe('click', this.showDialog.bindAsEventListener(this));
      this.urlTemplate = $('PageURL').value;

      this.titleInput = new Element('input', {
        type: 'text',
        id: 'bookPageTitle',
        class: 'form-control suggest-pages'
      });

      this.addButton = new Element('input', {
        class: 'btn btn-primary',
        value: "$services.localization.render('BookVersions.creationForm.add')"
      });
      this.dList = new Element('dl');

      this.dTitleTerm = new Element('dt');
      this.dTitleDef = new Element('dd');
      this.dTitleLabel = new Element('label', {for: 'bookPageTitle'});
      this.dTitleLabel.insert("$services.localization.render('BookVersions.creationForm.pageTitle')");
      this.dTitleHint = new Element('span', {class: 'xHint'});
      this.dTitleHint.insert("$services.localization.render('BookVersions.creationForm.pageTitle.hint')");
      this.dTitleTerm.insert(this.dTitleLabel);
      this.dTitleTerm.insert(this.dTitleHint);
      this.dTitleDef.insert(this.titleInput);
      this.dList.insert(this.dTitleTerm);
      this.dList.insert(this.dTitleDef);

      var container = new Element('div', {id: 'entryNamePopup', class: 'xform'});
      container.insert(this.dList);
      container.insert(this.addButton);

      $super(container, {
        show: {method: this.showDialog, keys: []},
        add: {method: this._onAdd, keys: ['Enter']}
      }, {
        title: '$escapetool.javascript($services.localization.render('BookVersions.creationForm.new'+$request.typeSingular))',
        verticalPosition: 'top'
      });
    },

    createDialog : function($super, event) {
      this.addButton.observe('click', this._onAdd.bind(this));
      $super(event);
    },

    showDialog : function($super, event) {
      $super(event);
      this.titleInput.clear().focus();

      // Since the popup content is injected dynamically, initialize the suggestPages here
      // If the global initialization (xwiki:dom:loaded) doesn't catch this dynamic content, manually trigger it
      require(['jquery', 'xwiki-suggestPages'], function($) {
        // Convert to a plain DOM element using [0]
        var entryNamePopupElement = $('#entryNamePopup')[0];
        // Trigger the event with an array containing the DOM element
        $(document).trigger('xwiki:dom:updated', { elements: [entryNamePopupElement] });
      });
    },

    _onAdd : function() {
      if (this.titleInput.value != '') {
        fetch("$xwiki.getURL('BookVersions.Code.AddLibrary')" + '?form_token=$!{services.csrf.getToken()}&amp;bookReference=$request.bookRef&amp;libraryReference=' + this.titleInput.value, {
          method: 'get'
        })
        .then((response) =&gt; {
          response.json();
          window.location.reload();
        })
        .catch(err =&gt; {
          console.log(err);
        });
      } else {
        this.titleInput.focus();
      }
    }
  });

  return XWiki;
}(XWiki || {}));

(XWiki.domIsLoaded) || document.observe('xwiki:dom:loaded', function(){
  var bookPageNamePopup = new XWiki.EntryNamePopup($('tmCreateResource').down('.addResource'));
  bookPageNamePopup.options.title = "$services.localization.render('BookVersions.creationForm.new'+$request.typeSingular)"
});
</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
