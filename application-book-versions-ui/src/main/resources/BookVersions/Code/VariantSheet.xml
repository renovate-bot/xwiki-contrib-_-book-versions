<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="BookVersions.Code.VariantSheet" locale="">
  <web>BookVersions.Code</web>
  <name>VariantSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>BookVersions.Code.VariantClass</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>#if($doc.documentReference.name == 'VariantSheet')Variant Sheet#{else}$services.display.title($doc, {'displayerHint': 'default', 'outputSyntaxId': 'plain/1.0'})#end</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
  #set ($queryLinkedPages = "where doc.object(BookVersions.Code.VariantsListClass).variantsList like :variant")
  #set ($resultsLinkedPages = $services.query.xwql($queryLinkedPages).bindValue('variant',"%${doc.fullName}%").execute())
  #set ($queryForVariantMacroPages = "where doc.content like :pattern and doc.fullName &lt;&gt; 'BookVersions.Code.VariantSheet'")
  #set ($resultsMacroPages = $services.query.xwql($queryForVariantMacroPages).bindValue('pattern',"%{{variant name=_${doc.fullName}%").execute())
  {{box}}
  === $services.localization.render("BookVersions.variants.linkedPagesListHeading") ===
  #if ($resultsLinkedPages.size() == 0 )
    $services.localization.render("BookVersions.variants.noLinkedPage")
  #end
  #foreach($result in $resultsLinkedPages)
    #displayAssociatedPage($result)
  #end
  === $services.localization.render("BookVersions.variants.macrosPagesListHeading") ===
  #if ($resultsMacroPages.size() == 0 )
    $services.localization.render("BookVersions.variants.noMacroUsingPage")
  #end
  #foreach($result in $resultsMacroPages)
    #displayAssociatedPage($result)
  #end
  {{/box}}

#macro(displayAssociatedPage $result)
  #set ($versionedContentDocRef = $services.model.resolveDocument($result))
  #if ($services.bookversions.isVersionedContent($versionedContentDocRef))
    #set($parentReference = $versionedContentDocRef.getParent())
    * [[$xwiki.getDocument($parentReference).title&gt;&gt;$result]]
  #else
    * [[$xwiki.getDocument($result).title&gt;&gt;$result]]
  #end
#end
{{/velocity}}</content>
</xwikidoc>
