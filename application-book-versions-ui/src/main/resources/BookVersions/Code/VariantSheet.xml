<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="BookVersions.Code.VariantSheet" locale="">
  <web>BookVersions.Code</web>
  <name>VariantSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>BookVersions.Code.VariantClass</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>#if($doc.documentReference.name == 'VariantSheet')Variant Sheet#{else}$services.display.title($doc, {'displayerHint': 'default', 'outputSyntaxId': 'plain/1.0'})#end</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
  #set ($object = $doc.getObject('BookVersions.Code.VariantClass'))
  #if (!$object)
    #stop
  #end
  ## We have to use wiki=true because $doc.display() can produce wiki syntax.
  {{html wiki="true" clean="false"}}
  ## Load the JavaScript code required to make the object properties editable in-place.
  #set ($discard = $xwiki.jsfx.use('uicomponents/edit/editableProperty.js', {
    'forceSkinAction': true,
    'language': $xcontext.locale
  }))
  #set ($editing = $xcontext.action == 'edit')
  ## The object to display.
  #set ($xobject = $doc.getObject('BookVersions.Code.VariantClass'))
  ## The class that describes the object properties.
  #set ($xclass = $xobject.xWikiClass)
  ## Make sure the following display method calls use the right object.
  #set ($discard = $doc.use($xobject))
  &lt;h1&gt;$services.localization.render('BookVersions.Code.VariantClassSheet.variantConfiguration')&lt;/h1&gt;
  ## Using the xform vertical form layout.
  &lt;div class="xform"&gt;
    &lt;dl&gt;
      &lt;dt&gt;
        &lt;label&gt;
          $!escapetool.xml($services.localization.render('BookVersions.template.title'))
        &lt;/label&gt;
      &lt;/dt&gt;
      &lt;dd&gt;{{include reference="BookVersions.Code.TitleDisplay"/}}&lt;/dd&gt;
   #foreach ($property in $xclass.properties)
       &lt;dt #if (!$editing &amp;&amp; $hasEdit)
          #if ($property.name != 'description')
          class="editableProperty"
          #end
          #set ($xobjectPropertyReference = $xobject.getPropertyReference($property.name))
          data-property="$escapetool.xml($services.model.serialize($xobjectPropertyReference))"
          data-property-type="object"#end&gt;
        ## This must match the id generated by the $doc.display() method below.
        #set ($propertyId = "${xclass.name}_${xobject.number}_$property.name")
        &lt;label#if ($editing) for="$escapetool.xml($propertyId)"#end&gt;
          $escapetool.xml($property.translatedPrettyName)
        &lt;/label&gt;
        ## Support for specifying a translation key as hint in the property definition.
        &lt;span class="xHint"&gt;$!escapetool.xml($services.localization.render($property.hint))&lt;/span&gt;
      &lt;/dt&gt;
      &lt;dd&gt;$doc.display($property.name)&lt;/dd&gt;
    #end
    #if (!$xclass.properties || $xclass.properties.size() == 0)
      ## Keep the empty definition term in order to have valid HTML.
      &lt;dt&gt;&lt;/dt&gt;
      &lt;dd&gt;$escapetool.xml($services.localization.render('xclass.defaultObjectSheet.noProperties'))&lt;/dd&gt;
    #end
    &lt;/dl&gt;
  &lt;/div&gt;
  #if($request.showAssociated == 'true')
    #set ($queryLinkedPages = "where doc.object(BookVersions.Code.VariantsListClass).variantsList like :variant")
    #set ($resultsLinkedPages = $services.query.xwql($queryLinkedPages).bindValue('variant',"%${doc.fullName}%").execute())
    #set ($queryForVariantMacroPages = "where doc.content like :pattern and doc.fullName &lt;&gt; 'BookVersions.Code.VariantSheet'")
    #set ($resultsMacroPages = $services.query.xwql($queryForVariantMacroPages).bindValue('pattern',"%{{variant name=_${doc.fullName}%").execute())

    {{box}}
    === $services.localization.render("BookVersions.variants.linkedPagesListHeading") ===
    #if ($resultsLinkedPages.size() == 0 )
      $services.localization.render("BookVersions.variants.noLinkedPage")
    #end
    #foreach($result in $resultsLinkedPages)
      #displayAssociatedPage($result)
    #end
    === $services.localization.render("BookVersions.variants.macrosPagesListHeading") ===
    #if ($resultsMacroPages.size() == 0 )
      $services.localization.render("BookVersions.variants.noMacroUsingPage")
    #end
    #foreach($result in $resultsMacroPages)
      #displayAssociatedPage($result)
    #end
    {{/box}}
  #else
    &lt;a href='?showAssociated=true' class='btn btn-primary'&gt;$services.localization.render("BookVersions.variants.loadPagesBtn")&lt;/a&gt;
  #end

#macro(displayAssociatedPage $result)
  #set ($versionedContentDocRef = $services.model.resolveDocument($result))
  #if ($services.bookversions.isVersionedContent($versionedContentDocRef))
    #set($parentReference = $versionedContentDocRef.getParent())
    * [[$xwiki.getDocument($parentReference).title&gt;&gt;$result]]
  #else
    * [[$xwiki.getDocument($result).title&gt;&gt;$result]]
  #end
#end
{{/velocity}}</content>
</xwikidoc>
