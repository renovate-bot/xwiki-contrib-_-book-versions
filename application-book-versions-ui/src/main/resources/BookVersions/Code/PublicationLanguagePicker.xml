<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="BookVersions.Code.PublicationLanguagePicker" locale="">
  <web>BookVersions.Code</web>
  <name>PublicationLanguagePicker</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>PublicationLanguagePicker</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#if ($type == 'edit' || $type == 'search')
  #set ($discard = $xwiki.jsx.use('BookVersions.Code.PublicationLanguagePicker'))
  #set ($parameters = {
    'placeholder': $services.localization.render('BookVersions.language.select'),
    'data-book': $services.model.serialize($services.bookversions.getVersionedCollectionReference($doc.documentReference))
  })
  #set ($discard = $parameters.put('class', "$!parameters.get('class') publication-language-picker"))
  #set ($discard = $parameters.put('id', "${prefix}${name}"))
  #set ($discard = $parameters.put('name', "${prefix}${name}"))
  #set ($parameters.value = $value)
  {{html clean="false"}}
  #picker_import()
  #suggestInput($parameters)
  {{/html}}
#else
  #if ("$!value" != '')
    #set ($currentLocale = $services.localization.currentLocale)
    #set ($locale = $services.localization.toLocale($value))
    #set ($displayvalue = $escapetool.xml($stringtool.capitalize($locale.getDisplayName($locale)) +
        ' (' + $stringtool.capitalize($locale.getDisplayName($currentLocale)) + ')'))
    $displayvalue
  #end
#end
{{/velocity}}</content>
  <object>
    <name>BookVersions.Code.PublicationLanguagePicker</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>2f87a416-0934-47f7-a457-baa9d034f4b4</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery', 'xwiki-selectize', 'xwiki-events-bridge'], function($) {
  var initPageLanguagePicker = function() {
    const restSearchURL = "$xwiki.getURL('BookVersions.Code.TranslationLanguageSuggestService')";
    var settings = {
      // Keep the parent scope
      load: (typedText, callback) =&gt; {
        $.getJSON(restSearchURL, {
          q: typedText,
          book: $(this).attr('data-book'),
        }).done(callback).fail(callback);
      },
      loadSelected: (selectedValue, callback) =&gt; {
        $.getJSON(restSearchURL, {
          q: selectedValue,
          book: $(this).attr('data-book'),
          exactMatch: true
        }).done(callback).fail(callback);
      }
    };
    $(this).xwikiSelectize(settings);
  };

  var init = function(event, data) {
    var container = $((data &amp;&amp; data.elements) || document);
    container.find('.publication-language-picker').each(initPageLanguagePicker);
  };

  $(init).on('xwiki:dom:updated', init);
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
