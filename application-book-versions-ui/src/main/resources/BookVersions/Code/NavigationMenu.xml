<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="BookVersions.Code.NavigationMenu" locale="">
  <web>BookVersions.Code</web>
  <name>NavigationMenu</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>Navigation Menu</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content/>
  <object>
    <name>BookVersions.Code.NavigationMenu</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>15a42119-ddc5-41e9-b114-a5552953a9ce</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery', 'xwiki-selectize'], function($) {
    const versionSelect = $('#collectionVersion');
    const formToken = $('#form_token');
    const collectionRef = $('#collectionRef');
    const setAttributeURL = $('#setAttributeURL');
    versionSelect.on("change", function() {
      window.location = (new XWiki.Document(XWiki.Model.resolve(versionSelect.val(), XWiki.EntityType.DOCUMENT))).getURL(XWiki.contextaction);
    })
  })</code>
    </property>
    <property>
      <name>bookNavigation</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>BookVersions.Code.NavigationMenu</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>08bd6337-e33f-4e61-b854-5aa5400bd278</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery', 'xwiki-selectize'], function($) {
  const variantSelect = $('#collectionVariant');
  const form = $('#changeVariantStatus');
  const selectedVariantInput = $('#selectedVariantInput');
  const linkToVariant = $('#linkToVariant');
  const unlinkFromVariant = $('#unlinkFromVariant');

  // Handle variant select change
  variantSelect.on("change", function() {
    const selectedVariant = $(this).val();
    selectedVariantInput.val(selectedVariant);
    form.submit();
  });

  // Create a reusable function to handle POST and redirect
  function handleVariantAction(action) {
    // Get the current variant value from the hidden input
    const currentVariant = selectedVariantInput.val();

    // Create a temporary form
    const tempForm = $('&lt;form&gt;', {
      method: 'POST',
      action: window.location.href
    });

    // Add the variant data
    $('&lt;input&gt;').attr({
      type: 'hidden',
      name: 'selectedVariant',
      value: currentVariant
    }).appendTo(tempForm);

    // Add the action type
    $('&lt;input&gt;').attr({
      type: 'hidden',
      name: 'variantAction',
      value: action
    }).appendTo(tempForm);

    // Add CSRF token if needed
    const token = $('meta[name="form_token"]').attr('content');
    if (token) {
      $('&lt;input&gt;').attr({
        type: 'hidden',
        name: 'form_token',
        value: token
      }).appendTo(tempForm);
    }

    // Append form to body, submit it, and remove it
    tempForm.appendTo('body').submit();
  }

  // Handle link clicks
  linkToVariant.on('click', function(e) {
    e.preventDefault();
    handleVariantAction('link');
  });

  unlinkFromVariant.on('click', function(e) {
    e.preventDefault();
    handleVariantAction('unlink');
  });
});</code>
    </property>
    <property>
      <name>Variants</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>BookVersions.Code.NavigationMenu</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>a644f6c1-ea9c-4a15-972b-9b0255417e27</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>/* Set up grid for the entire document-info section */
.book-info {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 1rem;
}

/* Form containers specific styling */
.book-info &gt; .formContainer {
  display: flex;
  flex-direction: column;
  min-height: 80px;
}

/* Ensure document title and last modification span full width */
.book-info &gt; #document-title,
.book-info &gt; .xdocLastModification {
  grid-column: 1 / -1;
}

/* Form styling */
.xformInline {
  margin-bottom: 0.5rem;
}

/* Text and button container */
.noitems {
  margin: 0;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex-wrap: wrap;
}

/* Select elements */
#collectionVersion,
#collectionVariant {
  width: 100%;
  max-width: 200px;
}

/* Button styling */
.create-versioned-content-btn,
.associate-variant-btn {
  white-space: nowrap;
}</code>
    </property>
    <property>
      <contentType/>
    </property>
    <property>
      <name>bookNavigation Styles</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>BookVersions.Code.NavigationMenu</name>
    <number>0</number>
    <className>XWiki.UIExtensionClass</className>
    <guid>6ec2aa51-9fe9-4fae-a697-9abcbf84acf6</guid>
    <class>
      <name>XWiki.UIExtensionClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <async_cached>
        <defaultValue>0</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>async_cached</name>
        <number>3</number>
        <prettyName>Cached</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </async_cached>
      <async_context>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>1</multiSelect>
        <name>async_context</name>
        <number>4</number>
        <prettyName>Context elements</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator>, </separator>
        <separators>|, </separators>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <values>action=Action|doc.reference=Document|doc.revision|icon.theme=Icon theme|locale=Language|rendering.defaultsyntax=Default syntax|rendering.restricted=Restricted|rendering.targetsyntax=Target syntax|request.base=Request base URL|request.cookies|request.headers|request.parameters=Request parameters|request.remoteAddr|request.session|request.url=Request URL|request.wiki=Request wiki|sheet|user=User|wiki=Wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </async_context>
      <async_enabled>
        <defaultValue>0</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>async_enabled</name>
        <number>2</number>
        <prettyName>Asynchronous rendering</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </async_enabled>
      <content>
        <disabled>0</disabled>
        <editor>Text</editor>
        <name>content</name>
        <number>1</number>
        <prettyName>Executed Content</prettyName>
        <restricted>0</restricted>
        <rows>25</rows>
        <size>120</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </content>
      <extensionPointId>
        <disabled>0</disabled>
        <name>extensionPointId</name>
        <number>5</number>
        <prettyName>Extension Point ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </extensionPointId>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>6</number>
        <prettyName>Extension ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parameters>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>parameters</name>
        <number>7</number>
        <prettyName>Extension Parameters</prettyName>
        <restricted>0</restricted>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </parameters>
      <scope>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>scope</name>
        <number>8</number>
        <prettyName>Extension Scope</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>wiki=Current Wiki|user=Current User|global=Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </scope>
    </class>
    <property>
      <async_cached>0</async_cached>
    </property>
    <property>
      <async_context/>
    </property>
    <property>
      <async_enabled>0</async_enabled>
    </property>
    <property>
      <content>{{velocity output=none}}
##
## Initialize common variables and services
##
#macro(initializeCommonVariables)
  #set ($debuglogger = $services.logging.getLogger('BookVersions.NavigationMenu'))
  #set ($docRef = $doc.getDocumentReference())
  #set ($collectionRef = $services.bookversions.getVersionedCollectionReference($docRef))
  #set ($isVersionedPage = $services.bookversions.isVersionedPage($docRef))
  #set ($isVersionedContent = $services.bookversions.isVersionedContent($docRef))
  #set ($isUnversionedPage = $services.bookversions.isPage($docRef) &amp;&amp; !$services.bookversions.isVersionedPage($docRef))
  #set ($contentRef = $services.model.resolveDocument($services.model.serialize($docRef.getParent(),'local')))
  #set ($isUnexistingContent = !$xwiki.exists($doc) &amp;&amp; $services.bookversions.isPossibleVersionedContentReference($collectionRef,$contentRef))
#end

##
## Initialize version-related variables
##
#macro(initializeVersionVariables)
  #set ($selectedVersion = $services.bookversions.getSelectedVersion($docRef))
  #set ($versions = $services.bookversions.getCollectionVersions($collectionRef))
  #set ($inheritedRedirFlag = $request.getSession().getAttribute('BookVersions.versionInheritedRedirFlag'))
#end

##
## Initialize variant-related variables
##
#macro(initializeVariantVariables)
  #set ($variants = $services.bookversions.getCollectionVariants($collectionRef))
  #if (!$selectedVariant &amp;&amp; $isVersionedPage &amp;&amp; $variants.size() &gt; 0)
    #set ($discard = $services.bookversions.setSelectedVariant($collectionRef, $variants[0]))
  #end
  #set ($selectedVariant = $services.bookversions.getSelectedVariant($collectionRef))
#end

##
## Handle variant actions (link/unlink)
##
#macro(handleVariantActions)
  #if("$!request.variantAction" != '')
    #set ($variantsObj = $doc.getObject("BookVersions.Code.VariantsListClass"))
    #if(!$variantsObj)
      #set ($variantsObj = $doc.newObject("BookVersions.Code.VariantsListClass"))
      #set ($associatedVariants = [])
    #else
      #set ($associatedVariants = $variantsObj.getProperty('variantsList').getValue())
    #end
    #set ($selectedVariant = "$!request.selectedVariant")
    #if($selectedVariant != '')
      #if($request.variantAction == 'link' &amp;&amp; !$associatedVariants.contains($selectedVariant))
        $associatedVariants.add($selectedVariant)
        $variantsObj.set('variantsList', $associatedVariants)
        $doc.save('Added variant association')
      #elseif($request.variantAction == 'unlink' &amp;&amp; $associatedVariants.contains($selectedVariant))
        $associatedVariants.remove($selectedVariant)
        $variantsObj.set('variantsList', $associatedVariants)
        $doc.save('Removed variant association')
      #end
    #end
  #end
#end

##
## Handle variant selection from request
##
#macro(handleVariantSelection)
  #if ("$!request.selectedVariant" != '')
    #set ($newVariant = $request.selectedVariant)
    $services.bookversions.setSelectedVariant($collectionRef, $newVariant)
    #set ($selectedVariant = $newVariant)
    $response.sendRedirect($xwiki.getURL($doc, $xcontext.action))
  #end
#end

##
## Handle version selection and redirections
##
#macro(handleVersionSelection)
  #if ($versions.size() &gt; 0)
    #if (!$selectedVersion)
      #handleNoSelectedVersion()
    #elseif ($isUnexistingContent &amp;&amp; !$request.r)
      #handleUnexistingContent()
    #elseif ($isVersionedPage &amp;&amp; !$isVersionedContent)
      #handleVersionedPageRedirection()
    #else
      #handleContentPageDisplay()
    #end
  #end
#end

##
## Handle case when no version is selected
##
#macro(handleNoSelectedVersion)
  #set ($selectedVersion = $versions.get(0))
  #if ($selectedVersion)
    $services.bookversions.setSelectedVersion($collectionRef, $selectedVersion)
    #set ($discard = $debuglogger.debug("No selected version yet. Set the most recent [$selectedVersion]"))
  #end
  #set ($discard = $request.getSession().setAttribute('BookVersions.versionInheritedRedirFlag',true))
  #set ($versionedContentReference = $services.bookversions.getInheritedContentReference($docRef, $selectedVersion))
  #set ($discard = $debuglogger.debug("Redirect to corresponding content [$versionedContentReference]"))
  $response.sendRedirect($xwiki.getURL($versionedContentReference, $xcontext.action))
#end

##
## Handle unexisting content case
##
#macro(handleUnexistingContent)
  #set ($contentRef = $services.model.resolveDocument($services.model.serialize($docRef.getParent(),'local')))
  #set ($versionRef = $services.bookversions.getVersionReference($collectionRef,$contentRef.getName()))
  #set ($versionedContentReference = $services.bookversions.getVersionedContentReference($contentRef, $services.model.serialize($versionRef)))
  #if ($versionedContentReference)
    $services.bookversions.setSelectedVersion($collectionRef, $services.model.serialize($versionRef,'local'))
    #set ($discard = $debuglogger.debug("No selected version yet. Set to [$versionRef]"))
  #end
  #set ($discard = $request.getSession().setAttribute('BookVersions.versionInheritedRedirFlag',true))
  #set ($inheritedVersionedContentReference = $services.bookversions.getInheritedContentReference($contentRef, $versionRef))
  #handleUnexistingContentRedirection($inheritedVersionedContentReference)
#end

##
## Handle redirection for unexisting content
##
#macro(handleUnexistingContentRedirection $inheritedVersionedContentReference)
  #if ($inheritedVersionedContentReference)
    #set ($discard = $debuglogger.debug("Redirect to: $inheritedVersionedContentReference"))
    $response.sendRedirect($xwiki.getURL($inheritedVersionedContentReference, $xcontext.action))
  #elseif($isVersionedContent)
    $response.sendRedirect($xwiki.getURL($inheritedVersionedContentReference, $xcontext.action, 'r=0'))
  #else
    #handleParentRedirection()
  #end
#end

##
## Handle parent page redirection
##
#macro(handleParentRedirection)
  #set($parentReference = $docRef.getParent())
  #set($isParentVersionedPage = $services.bookversions.isVersionedPage($parentReference))
  #if(!$isParentVersionedPage &amp;&amp; $docRef.getLastSpaceReference() &amp;&amp; $docRef.getLastSpaceReference().getParent())
    #set($parentReference = $docRef.getLastSpaceReference().getParent())
    #set($isParentVersionedPage = $services.bookversions.isVersionedPage($parentReference))
  #end
  #if($isParentVersionedPage)
    #set ($versionedContentReference = $services.bookversions.getVersionedContentReference($parentReference, $services.model.serialize($selectedVersion)))
    $response.sendRedirect($xwiki.getURL($versionedContentReference))
  #end
#end

##
## Handle versioned page redirection
##
#macro(handleVersionedPageRedirection)
  #set ($discard = $debuglogger.debug('Page is a top page (versioned page but not content)'))
  #set ($versionedContentReference = $services.bookversions.getVersionedContentReference($docRef, $selectedVersion))
  #if ($versionedContentReference &amp;&amp; $xwiki.exists($versionedContentReference))
    #set ($discard = $debuglogger.debug("Redirect to version content selected: $versionedContentReference"))
    $response.sendRedirect($xwiki.getURL($versionedContentReference, $xcontext.action))
  #else
    #handleInheritedContent()
  #end
#end

##
## Handle inherited content
##
#macro(handleInheritedContent)
  #set ($discard = $debuglogger.debug('No version to inherit from, starting with [{}]. Searching further.', $selectedVersion))
  #if (!$selectedVersion)
    #set ($selectedVersion = $versions.get(0))
  #end
  #if ($selectedVersion)
    #set ($inheritedVersionedContentReference = $services.bookversions.getInheritedContentReference($docRef, $services.model.resolveDocument($selectedVersion)))
    #if ($inheritedVersionedContentReference)
      $response.sendRedirect($xwiki.getURL($inheritedVersionedContentReference, $xcontext.action))
    #end
  #else
    #set ($discard = $debuglogger.debug('Found NO versioned content for page[{}]', ${docRef}))
    {{warning}}
      {{html}}$services.localization.render('BookVersions.navMenu.warning.noversion'){{/html}}
    {{/warning}}
  #end
#end

##
## Handle content page display
##
#macro(handleContentPageDisplay)
  #set ($discard = $debuglogger.debug('Content page to be displayed'))
  #if ($inheritedRedirFlag)
    #set ($discard = $debuglogger.debug('Page reached through inheritance, selectedVersion stays untouched'))
    #set ($discard = $request.getSession().setAttribute('BookVersions.versionInheritedRedirFlag',false))
  #elseif ("$!selectedVersion" != '')
    #handleSelectedVersionUpdate()
  #end
#end

##
## Update selected version
##
#macro(handleSelectedVersionUpdate)
  #set ($currentVersionedContentName = $docRef.getName())
  #if ($currentVersionedContentName == 'WebHome')
    #set ($currentVersionedContentName = $docRef.getParent().getName())
  #end
  #set ($versionReference = $services.bookversions.getVersionReference($collectionRef, $currentVersionedContentName))
  #set ($selectedVersion = $services.model.serialize($versionReference, 'local'))
  #if ($selectedVersion)
    $services.bookversions.setSelectedVersion($collectionRef, $selectedVersion)
    #set ($discard = $debuglogger.debug('Set selectedVersion from current page: [{}]', $selectedVersion))
  #end
#end

##
## Render the version and variant selectors
##
#macro(renderSelectors)
  #if ($isVersionedContent || $isVersionedPage)
    #setupVersionDisplay()
    #setupVariantDisplay()
    #renderSelectorsHTML()
  #end
#end

##
## Setup version display variables
##
#macro(setupVersionDisplay)
  #set ($currentDocName = $docRef.getName())
  #set ($selectedVersionName = $services.bookversions.getVersionName($services.model.resolveDocument($selectedVersion)))
  #set ($stateMessageKey = '')
  #if ($selectedVersionName.equals($currentDocName))
    #set ($stateMessageKey = 'BookVersions.navMenu.versioned')
  #else
    #set ($stateMessageKey = 'BookVersions.navMenu.inherited')
  #end
  #set ($versionTitle = $xwiki.getDocument($services.bookversions.getVersionReference($collectionRef,$docRef.getName())).displayTitle)
#end

##
## Setup variant display variables
##
#macro(setupVariantDisplay)
  #set ($variantsObj = $doc.getObject("BookVersions.Code.VariantsListClass"))
  #set ($associatedVariants = [])
  #if ($variantsObj)
    #set ($associatedVariants = $variantsObj.getProperty('variantsList').getValue())
  #end
  #set ($selectedVariantName = $services.bookversions.getVariantName($services.model.resolveDocument($selectedVariant)))
  #if ($associatedVariants &amp;&amp; $associatedVariants.size() &gt; 0 &amp;&amp; $associatedVariants.contains($selectedVariant))
    #set ($variantStateMessageKey = 'BookVersions.navMenu.contentForVariant')
  #elseif ($associatedVariants &amp;&amp; $associatedVariants.size() &gt; 0 &amp;&amp; !$associatedVariants.contains($selectedVariant))
    #set ($variantStateMessageKey = 'BookVersions.navMenu.pageIsNotAssociated')
    #set ($msgAssociateVariantName = $services.bookversions.getVariantName($services.model.resolveDocument($selectedVariant)))
  #else
    #set ($variantStateMessageKey = 'BookVersions.navMenu.pageAvailableForAll')
    #set ($msgAssociateVariantName = $services.bookversions.getVariantName($services.model.resolveDocument($selectedVariant)))
  #end
  #set ($variantTitle = $xwiki.getDocument($services.bookversions.getVariantReference($collectionRef,$selectedVariantName)).displayTitle)
#end

##
## Render the HTML for selectors
##
#macro(renderSelectorsHTML)
  {{html}}
  &lt;div class="book-info"&gt;
    #if ($versions.size() &gt; 0)
      #renderVersionSelector()
    #end
    #if ($variants.size() &gt; 0)
      #renderVariantSelector()
    #end
    #if ($isVersionedContent)
      #displayStatusProperty()
    #end
  &lt;/div&gt;
  {{/html}}
#end

##
## Render version selector HTML
##
#macro(renderVersionSelector)
  &lt;div class="formContainer"&gt;
    &lt;form class="xformInline" id="changeArchiveStatus"&gt;
      &lt;input type="hidden" id="form_token" value="$escapetool.xml("$!services.csrf.token")"/&gt;
      &lt;label for="collectionVersion"&gt;$services.localization.render('BookVersions.navMenu.versionSelect')&lt;/label&gt;
      &lt;select name="collectionVersion" id="collectionVersion"&gt;
        #foreach($version in $versions)
          #if ($version)
            #set ($versionReference = $services.model.resolveDocument($version))
            #set ($versionDocument = $xwiki.getDocument($versionReference))
            #set ($versionName = $services.bookversions.getVersionName($version))
            #set ($versionedContentReference = $services.model.serialize($services.bookversions.getVersionedContentReference($docRef, $versionReference), 'local'))
            #if ($versionedContentReference)
              #set ($isSelected = $versionName &amp;&amp; $selectedVersionName &amp;&amp; $versionName.equals($selectedVersionName))
              &lt;option value="$versionedContentReference" #if ($isSelected)selected#end&gt;$versionDocument.displayTitle&lt;/option&gt;
            #end
          #end
        #end
      &lt;/select&gt;
      &lt;p class="noitems"&gt;
        $services.localization.render($stateMessageKey, [$versionTitle])
      &lt;/p&gt;
    &lt;/form&gt;
  &lt;/div&gt;
#end

##
## Render variant selector HTML
##
#macro(renderVariantSelector)
  &lt;div class="formContainer"&gt;
    &lt;form class="xformInline" id="changeVariantStatus" method="post"&gt;
      &lt;input type="hidden" id="variant_form_token" name="form_token" value="$escapetool.xml("$!services.csrf.token")"/&gt;
      &lt;input type="hidden" name="selectedVariant" id="selectedVariantInput" value="$selectedVariant"/&gt;
      &lt;label for="collectionVariant"&gt;$services.localization.render('BookVersions.navMenu.variantSelect')&lt;/label&gt;
      &lt;select name="collectionVariant" id="collectionVariant"&gt;
        #foreach($variant in $variants)
          #if ($variant)
            #set ($variantReference = $services.model.resolveDocument($variant))
            #set ($variantDocument = $xwiki.getDocument($variantReference))
            #set ($variantName = $services.bookversions.getVariantName($variant))
            #set ($versionedCollectionRef = $services.bookversions.getVersionedCollectionReference($docRef))
            #set ($variantLocalReference = $services.model.serialize($services.bookversions.getVariantReference($versionedCollectionRef, $variantReference.getName()), 'local'))
            #if ($variantLocalReference)
              #set ($isSelected = $variantName &amp;&amp; $selectedVariantName &amp;&amp; $variantName.equals($selectedVariantName))
              &lt;option value="$variantLocalReference" #if($isSelected)selected#end&gt;$variantDocument.displayTitle&lt;/option&gt;
            #end
          #end
        #end
      &lt;/select&gt;
      &lt;p class="noitems"&gt;
        $services.localization.render($variantStateMessageKey, [$variantTitle])
      &lt;/p&gt;
    &lt;/form&gt;
  &lt;/div&gt;
#end

##
## Display status property
##
#macro(displayStatusProperty)
  #set ($xobject = $doc.getObject('BookVersions.Code.BookVersionedContentClass'))
  #set ($statusProp = $xobject.getProperty('status').getPropertyClass())
  #set ($xclass = $xobject.xWikiClass)
  #set ($discard = $doc.use($xobject))
  #set ($editing = $xcontext.action == 'edit')
  &lt;div class="formContainer"&gt;
    &lt;div class="xform"&gt;
      &lt;dl&gt;
        &lt;dt #if (!$editing &amp;&amp; $hasEdit)
            class="editableProperty"
            #set ($xobjectPropertyReference = $xobject.getPropertyReference($statusProp.name))
            data-property="$escapetool.xml($services.model.serialize($xobjectPropertyReference))"
            data-property-type="object"#end&gt;
          #set ($propertyId = "${xclass.name}_${xobject.number}_$statusProp.name")
          &lt;label#if ($editing) for="$escapetool.xml($propertyId)"#end&gt;
            $escapetool.xml($statusProp.translatedPrettyName)
          &lt;/label&gt;
          &lt;span class="xHint"&gt;$!escapetool.xml($services.localization.render($statusProp.hint))&lt;/span&gt;
        &lt;/dt&gt;
        &lt;dd&gt;$doc.display($statusProp.name)&lt;/dd&gt;
      &lt;/dl&gt;
    &lt;/div&gt;
  &lt;/div&gt;
#end
{{/velocity}}

{{velocity}}
##
## Main execution flow
##
## Do nothing if not in the view action
#if ($xcontext.action == 'view')
  #stop
#end
## Initialize all required variables
#initializeCommonVariables()
#initializeVersionVariables()
#initializeVariantVariables()
##
#set ($discard = $debuglogger.debug("START Navigation menu for [$docRef], inheritedRedirFlag [$inheritedRedirFlag], collectionRef [$collectionRef], isVersionedPage [$isVersionedPage], isVersionedContent [$isVersionedContent], isUnexistingContent [$isUnexistingContent]"))
##
## Handle variant-related actions
#handleVariantActions()
#handleVariantSelection()
##
## Process version selection and handle redirections if needed
#if ("$!collectionRef" != '' &amp;&amp; ($versions.size() &gt; 0 || $variants.size() &gt; 0) &amp;&amp; ($isVersionedPage || $isVersionedContent || $isUnexistingContent))
  #set ($discard = $xwiki.ssx.use('BookVersions.Code.NavigationMenu'))
  #set ($discard = $xwiki.jsx.use('BookVersions.Code.NavigationMenu'))
##
  #handleVersionSelection()
  #renderSelectors()
#end
{{/velocity}}</content>
    </property>
    <property>
      <extensionPointId>org.xwiki.platform.template.title.before</extensionPointId>
    </property>
    <property>
      <name>NavigationMenu</name>
    </property>
    <property>
      <parameters>order=1000</parameters>
    </property>
    <property>
      <scope>wiki</scope>
    </property>
  </object>
</xwikidoc>
