<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="BookVersions.Code.NavigationMenu" locale="">
  <web>BookVersions.Code</web>
  <name>NavigationMenu</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>Navigation Menu</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content/>
  <object>
    <name>BookVersions.Code.NavigationMenu</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>15a42119-ddc5-41e9-b114-a5552953a9ce</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery', 'xwiki-selectize'], function($) {
    const versionSelect = $('#collectionVersion');
    const formToken = $('#form_token');
    const collectionRef = $('#collectionRef');
    const setAttributeURL = $('#setAttributeURL');
    versionSelect.on("change", function() {
      window.location = (new XWiki.Document(XWiki.Model.resolve(versionSelect.val(), XWiki.EntityType.DOCUMENT))).getURL(XWiki.contextaction);
    })
  })</code>
    </property>
    <property>
      <name>bookNavigation</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>BookVersions.Code.NavigationMenu</name>
    <number>0</number>
    <className>XWiki.UIExtensionClass</className>
    <guid>6ec2aa51-9fe9-4fae-a697-9abcbf84acf6</guid>
    <class>
      <name>XWiki.UIExtensionClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <async_cached>
        <defaultValue>0</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>async_cached</name>
        <number>3</number>
        <prettyName>Cached</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </async_cached>
      <async_context>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>1</multiSelect>
        <name>async_context</name>
        <number>4</number>
        <prettyName>Context elements</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator>, </separator>
        <separators>|, </separators>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <values>action=Action|doc.reference=Document|doc.revision|icon.theme=Icon theme|locale=Language|rendering.defaultsyntax=Default syntax|rendering.restricted=Restricted|rendering.targetsyntax=Target syntax|request.base=Request base URL|request.cookies|request.headers|request.parameters=Request parameters|request.remoteAddr|request.session|request.url=Request URL|request.wiki=Request wiki|sheet|user=User|wiki=Wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </async_context>
      <async_enabled>
        <defaultValue>0</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>async_enabled</name>
        <number>2</number>
        <prettyName>Asynchronous rendering</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </async_enabled>
      <content>
        <disabled>0</disabled>
        <editor>Text</editor>
        <name>content</name>
        <number>1</number>
        <prettyName>Executed Content</prettyName>
        <restricted>0</restricted>
        <rows>25</rows>
        <size>120</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </content>
      <extensionPointId>
        <disabled>0</disabled>
        <name>extensionPointId</name>
        <number>5</number>
        <prettyName>Extension Point ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </extensionPointId>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>6</number>
        <prettyName>Extension ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parameters>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>parameters</name>
        <number>7</number>
        <prettyName>Extension Parameters</prettyName>
        <restricted>0</restricted>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </parameters>
      <scope>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>scope</name>
        <number>8</number>
        <prettyName>Extension Scope</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>wiki=Current Wiki|user=Current User|global=Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </scope>
    </class>
    <property>
      <async_cached>0</async_cached>
    </property>
    <property>
      <async_context/>
    </property>
    <property>
      <async_enabled>0</async_enabled>
    </property>
    <property>
      <content>{{velocity}}
  #set($debuglogger = $services.logging.getLogger('BookVersions.NavigationMenu'))
  ## Current document reference
  #set ($docRef = $doc.getDocumentReference())
  ## Collection (Book / Library) reference
  #set ($collectionRef = $services.bookversions.getVersionedCollectionReference($docRef))
  ## Check if the book page is versioned
  #set ($isVersionedPage = $services.bookversions.isVersionedPage($docRef))
  ## Check if the current document is of type versioned content (has the associated object)
  #set ($isVersionedContent = $services.bookversions.isVersionedContent($docRef))
  ## Check if the current document is not existing but correponds to a version content page
  ## (For non existing page, docRef provides WebHome even if a terminal page was required, then parent name is taken to get the expected version name)
  #set ($contentRef = $services.model.resolveDocument($services.model.serialize($docRef.getParent(),'local')))
  #set ($isUnexistingContent = !$xwiki.exists($doc) &amp;&amp; $services.bookversions.isPossibleVersionedContentReference($collectionRef,$contentRef))
  ## Get the current selected version
  #set ($selectedVersion = $services.bookversions.getSelectedVersion($docRef))
  ## Get the list of versions defined for the current collection
  #set ($versions = $services.bookversions.getCollectionVersions($collectionRef))
  ## Get the flag showing if the menu has redirected to an inherited version
  #set ($inheritedRedirFlag = $request.getSession().getAttribute('BookVersions.versionInheritedRedirFlag'))
  #set($discard = $debuglogger.debug("START Navigation menu for [$docRef], inheritedRedirFlag [$inheritedRedirFlag],
        collectionRef [$collectionRef], isVersionedPage [$isVersionedPage], isVersionedContent [$isVersionedContent], isUnexistingContent [$isUnexistingContent]"))
  #if ("$!collectionRef" != '' &amp;&amp; $versions.size() &gt; 0 &amp;&amp; ($isVersionedPage || $isVersionedContent || $isUnexistingContent))
    ## Document is in an initialized collection, and is a page
    #set($discard = $debuglogger.debug('Document is in an initialized collection, and is a page'))
    #if (!$selectedVersion)
      ## No version selected yet (first visit in the book for this user session). Display the most recent one
      #set ($selectedVersion = $versions.get(0))
      #set($discard = $debuglogger.debug("No selected version yet. Set the most recent [$selectedVersion]"))
      $services.bookversions.setSelectedVersion($collectionRef, $selectedVersion)
      #set($discard = $request.getSession().setAttribute('BookVersions.versionInheritedRedirFlag',true))
      ## Get the reference of the versioned content doc, for the selected version
      #set ($versionedContentReference = $services.bookversions.getInheritedContentReference($docRef, $selectedVersion))
      #set($discard = $debuglogger.debug("Redirect to corresponding content [$versionedContentReference]"))
      $response.sendRedirect($xwiki.getURL($versionedContentReference, $xcontext.action))
    #elseif ($isUnexistingContent)
      ## Content doesn't exist
      #set($discard = $debuglogger.debug('Content does not exist yet'))
      ## For non existing page, docRef provides WebHome even if a terminal page was required, then parent name is taken to get the expected version name
      #set ($contentRef = $services.model.resolveDocument($services.model.serialize($docRef.getParent(),'local')))
      #set ($versionRef = $services.bookversions.getVersionReference($collectionRef,$contentRef.getName()))
      ## Set the selected version
      #set ($versionedContentReference = $services.bookversions.getVersionedContentReference($contentRef, $versionRef))
      $services.bookversions.setSelectedVersion($collectionRef, $services.model.serialize($versionedContentReference,'local'))
      #set($discard = $request.getSession().setAttribute('BookVersions.versionInheritedRedirFlag',true))
      ## Redirect to existing content
      #set ($inheritedVersionedContentReference = $services.bookversions.getInheritedContentReference($contentRef, $versionRef))
      #if ($inheritedVersionedContentReference)
        ## Go to inherited content
        #set($discard = $debuglogger.debug("Redirect to: $inheritedVersionedContentReference"))
      #else
        ## Got to the inheristed of the most recent version
        #set ($inheritedVersionedContentReference = $services.bookversions.getInheritedContentReference($contentRef, $versions.get(0)))
        set($discard = $debuglogger.debug("No version to inherit from, redirect to inherited of the most recent version: $inheritedVersionedContentReference"))
      #end
      $response.sendRedirect($xwiki.getURL($inheritedVersionedContentReference, $xcontext.action))
    #elseif ($isVersionedPage &amp;&amp; !$isVersionedContent)
      ## Top page (versioned page but not content)
      #set($discard = $debuglogger.debug('Page is a top page (versioned page but not content)'))
      #set ($versionedContentReference = $services.bookversions.getVersionedContentReference($docRef, $selectedVersion))
      #set($discard = $debuglogger.debug("Redirect to version content selected: $versionedContentReference"))
      $response.sendRedirect($xwiki.getURL($versionedContentReference, $xcontext.action))
    #else
      ## Content page to be displayed
      #set($discard = $debuglogger.debug('Content page to be displayed'))
      #set ($discard = $xwiki.jsx.use('BookVersions.Code.NavigationMenu'))
      #if ($inheritedRedirFlag)
        ## Page reached through inheritance, selectedVersion stays untouched
        #set($discard = $debuglogger.debug('Page reached through inheritance, selectedVersion stays untouched'))
        #set($discard = $request.getSession().setAttribute('BookVersions.versionInheritedRedirFlag',false))
      #else
        ## Set selectedVersion from current page
        #set($discard = $debuglogger.debug('Set selectedVersion from current page'))
        #set ($selectedVersion = $services.model.serialize($docRef, 'local'))
        $services.bookversions.setSelectedVersion($collectionRef, $selectedVersion)
      #end
      #set ($selectedVersionName = $services.model.resolveDocument($selectedVersion).getName())
      ## Set the display message
      #set ($currentDocName = $docRef.getName())
      #if($selectedVersionName.equals($currentDocName))
        #set($stateMessageKey = 'BookVersions.navMenu.versioned')
      #else
        #set($stateMessageKey = 'BookVersions.navMenu.inherited')
      #end
      ## Get the current displayed page version
      #set ($versionTitle = $xwiki.getDocument($services.bookversions.getVersionReference($collectionRef,$docRef.getName())).displayTitle)

      {{html}}
      &lt;form class='xformInline' id='changeArchiveStatus'&gt;
        &lt;input type="hidden" id="form_token" value="$escapetool.xml("$!services.csrf.token")"/&gt;
        &lt;label for="collectionVersion"&gt;$services.localization.render('BookVersions.navMenu.versionSelect')&lt;/label&gt;
        &lt;select name='collectionVersion' id='collectionVersion'&gt;
          #foreach($version in $versions)
            #if ($version)
              #set ($versionDocument = $xwiki.getDocument($version))
              #set ($versionedContentReference = $services.model.serialize($services.bookversions.getVersionedContentReference($docRef, $versionDocument.getDocumentReference()), 'local'))
              #if ($versionedContentReference)
                #set ($isSelected = $versionDocument.getDocumentReference().getName().equals($selectedVersionName))
                &lt;option value="$versionedContentReference" #if($isSelected)selected#end&gt;$versionDocument.displayTitle&lt;/option&gt;
              #end
            #end
          #end
        &lt;/select&gt;
      &lt;/form&gt;
      &lt;p class='noitems'&gt;$services.localization.render($stateMessageKey, [$versionTitle])&lt;/p&gt;
      {{/html}}
    #end
  #end
{{/velocity}}</content>
    </property>
    <property>
      <extensionPointId>org.xwiki.platform.template.title.before</extensionPointId>
    </property>
    <property>
      <name>NavigationMenu</name>
    </property>
    <property>
      <parameters/>
    </property>
    <property>
      <scope>wiki</scope>
    </property>
  </object>
</xwikidoc>
